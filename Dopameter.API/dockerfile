# Use the official .NET SDK image to build the application
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build

# Set the working directory
WORKDIR /app

# Copy the project file and restore dependencies
COPY *.csproj ./
RUN dotnet restore

# Copy the rest of the application and build it
COPY . ./
RUN dotnet publish -c Release -o out

# Use the official .NET ASP.NET Runtime image to run the application
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime

# Set the working directory
WORKDIR /app

# Copy the published application from the build image
COPY --from=build /app/out ./

# Expose the port the application will run on
EXPOSE 5239

# Set the entry point for the application
ENTRYPOINT ["dotnet", "Dopameter.API.dll"]

# Use the official .NET 8.0 SDK image as the base image
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 8080
EXPOSE 8443

# Set environment variables for ASP.NET Core to use HTTPS
ENV ASPNETCORE_URLS="https://+:8443;http://+:8080"
ENV ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
ENV ASPNETCORE_Kestrel__Certificates__Default__Password="dopameter123"

# Copy the HTTPS certificate to the container
# (Make sure to replace "aspnetapp.pfx" with your actual certificate file)
COPY ./aspnetapp.pfx /https/aspnetapp.pfx

# Use the .NET 8.0 SDK image to build the app
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src
COPY ["Dopameter.API.csproj", "Dopameter.API/"]
RUN dotnet restore "Dopameter.API/Dopameter.API.csproj"

COPY . .
WORKDIR "/src/Dopameter.API"
RUN dotnet build "Dopameter.API.csproj" -c Release -o /app/build

# Publish the app
FROM build AS publish
RUN dotnet publish "Dopameter.API.csproj" -c Release -o /app/publish

# Use the base image to run the app
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Dopameter.API.dll"]


